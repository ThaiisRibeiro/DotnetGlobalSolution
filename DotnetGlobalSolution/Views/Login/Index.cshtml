@model LoginModel
@{
    Layout = "_LayoutDeslogado";
    ViewData["Title"] = "Login";
}

@if (TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" data-bs-dismiss="alert" aria-label="Close"></button>
        @TempData["MensagemErro"]
    </div>
}


<div style="display: flex; justify-content: center; align-items: center; height: 100vh;flex-direction: column;">
    <form asp-controller="Login" asp-action="Entrar" method="post" style="width: 300px">

    <div class="form-group">
        <label for="login" class="form-label">Login</label>
        <input type="text" asp-for="Login" class="form-control" placeholder="Login">
        @Html.ValidationMessageFor(x => x.Login)
    </div>

    <div class="form-group">
        <label for="senha" class="form-label">Senha</label>
        <input type="text" asp-for="Senha" class="form-control" placeholder="Senha">
        @Html.ValidationMessageFor(x => x.Senha)
    </div>


  <div style="display: flex; justify-content: center; gap: 10px; margin-top: 20px;">
    <button type="submit" class="btn btn-primary">Entrar</button>
 </div>

</form>
    <form asp-controller="Login" asp-action="Cadastrar" method="post" style="width: 300px; margin-top: 10px;">
        <div style="display: flex; justify-content: center;">
            <button type="submit" class="btn btn-primary">Cadastrar</button>
        </div>
    </form>
    </div>
